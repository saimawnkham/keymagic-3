import { Colors } from "../theme/colors.slint";
import { Fonts } from "../theme/fonts.slint";
import { Styles } from "../theme/styles.slint";
import { Button, CheckBox } from "std-widgets.slint";
import { HotkeyInput } from "hotkey_input.slint";
import { KeyboardInfo } from "../types.slint";

export component HotkeyDialog inherits Rectangle {
    in property <bool> show: false;
    in property <KeyboardInfo> keyboard;
    in-out property <string> temp-hotkey: "";
    
    callback confirm-hotkey(string /* keyboard-id */, string /* hotkey */);
    callback cancel();
    callback use-default();
    
    visible: root.show;
    
    // Dark overlay
    Rectangle {
        background: Colors.shadow;
        opacity: 0.5;
        
        TouchArea {
            clicked => { root.cancel(); }
        }
    }
    
    // Dialog container
    Rectangle {
        width: 520px;
        height: self.preferred-height;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        
        background: Colors.surface;
        border-radius: Styles.radius-lg;
        drop-shadow-color: Colors.shadow;
        drop-shadow-offset-y: 8px;
        drop-shadow-blur: 16px;
        
        VerticalLayout {
            padding: Styles.spacing-2xl;
            spacing: Styles.spacing-xl;
            
            // Header
            HorizontalLayout {
                spacing: Styles.spacing-lg;
                alignment: space-between;
                
                Text {
                    text: "Configure Hotkey";
                    font-size: Fonts.size-xl;
                    font-weight: Fonts.weight-semibold;
                    color: Colors.text-primary;
                    vertical-alignment: center;
                }
                
                // Close button
                Rectangle {
                    width: 32px;
                    height: 32px;
                    border-radius: Styles.radius-full;
                    background: Colors.background;
                    
                    TouchArea {
                        width: 100%;
                        height: 100%;
                        clicked => { root.cancel(); }
                    }
                    
                    Text {
                        text: "×";
                        font-size: Fonts.size-xl;
                        color: Colors.text-secondary;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
            }
            
            // Keyboard info
            Rectangle {
                background: Colors.background;
                border-radius: Styles.radius-lg;
                
                HorizontalLayout {
                    padding: Styles.spacing-lg;
                    spacing: Styles.spacing-lg;
                    alignment: center;
                    
                    // Icon
                    if root.keyboard.has-icon: Rectangle {
                        width: 48px;
                        height: 48px;
                        border-radius: Styles.radius-md;
                        background: Colors.surface;
                        border-width: 1px;
                        border-color: Colors.border;
                        
                        Image {
                            source: root.keyboard.icon;
                            width: 32px;
                            height: 32px;
                            x: (parent.width - self.width) / 2;
                            y: (parent.height - self.height) / 2;
                            image-fit: contain;
                        }
                    }
                    
                    // Name and description
                    VerticalLayout {
                        spacing: 4px;
                        horizontal-stretch: 1;
                        
                        Text {
                            text: root.keyboard.name;
                            font-size: Fonts.size-lg;
                            font-weight: Fonts.weight-medium;
                            color: Colors.text-primary;
                        }
                        
                        if root.keyboard.description != "": Text {
                            text: root.keyboard.description;
                            font-size: Fonts.size-sm;
                            color: Colors.text-secondary;
                            wrap: word-wrap;
                        }
                    }
                }
            }
            
            // Current hotkey display
            if root.keyboard.hotkey != "": Rectangle {
                background: Colors.primary-light;
                border-radius: Styles.radius-md;
                
                HorizontalLayout {
                    padding: Styles.spacing-md;
                    spacing: Styles.spacing-sm;
                    alignment: center;
                    
                    Text {
                        text: "Current hotkey:";
                        font-size: Fonts.size-sm;
                        color: Colors.text-on-primary;
                        vertical-alignment: center;
                    }
                    
                    Rectangle {
                        background: Colors.primary;
                        border-radius: Styles.radius-sm;
                        
                        HorizontalLayout {
                            padding-left: Styles.spacing-md;
                            padding-right: Styles.spacing-md;
                            padding-top: Styles.spacing-xs;
                            padding-bottom: Styles.spacing-xs;
                            
                            Text {
                                text: root.keyboard.hotkey;
                                font-size: Fonts.size-sm;
                                font-weight: Fonts.weight-medium;
                                color: Colors.text-on-primary;
                                vertical-alignment: center;
                            }
                        }
                    }
                }
            }
            
            // Default hotkey info
            if root.keyboard.default-hotkey != "": Rectangle {
                background: Colors.info;
                border-radius: Styles.radius-md;
                
                HorizontalLayout {
                    padding: Styles.spacing-md;
                    spacing: Styles.spacing-sm;
                    alignment: center;
                    
                    Text {
                        text: "ℹ";
                        font-size: Fonts.size-lg;
                        color: Colors.text-on-primary;
                        vertical-alignment: center;
                    }
                    
                    Text {
                        text: "Default hotkey: " + root.keyboard.default-hotkey;
                        font-size: Fonts.size-sm;
                        color: Colors.text-on-primary;
                        vertical-alignment: center;
                    }
                }
            }
            
            // Hotkey input section
            Rectangle {
                background: Colors.background;
                border-radius: Styles.radius-lg;
                border-width: 2px;
                border-color: Colors.primary;
                
                VerticalLayout {
                    padding: Styles.spacing-lg;
                    spacing: Styles.spacing-md;
                    
                    Text {
                        text: "Set new hotkey:";
                        font-size: Fonts.size-base;
                        font-weight: Fonts.weight-medium;
                        color: Colors.text-primary;
                    }
                    
                    Rectangle {
                        HotkeyInput {
                            initial-hotkey: root.keyboard.hotkey;
                            initial-ctrl: root.keyboard.hotkey-ctrl;
                            initial-alt: root.keyboard.hotkey-alt;
                            initial-shift: root.keyboard.hotkey-shift;
                            initial-key: root.keyboard.hotkey-key;
                            
                            hotkey-changed(new-hotkey) => {
                                root.temp-hotkey = new-hotkey;
                            }
                        }
                    }
                    
                    Text {
                        text: "Use at least two modifier keys, or one modifier key plus a regular key.";
                        font-size: Fonts.size-xs;
                        color: Colors.text-disabled;
                        wrap: word-wrap;
                    }
                }
            }
            
            // Action buttons
            HorizontalLayout {
                spacing: Styles.spacing-md;
                alignment: stretch;
                
                if root.keyboard.default-hotkey != "" && root.keyboard.custom-hotkey != "": Button {
                    text: "Use Default";
                    clicked => { root.use-default(); }
                }
                
                Rectangle { horizontal-stretch: 1; }
                
                Button {
                    text: "Cancel";
                    clicked => { root.cancel(); }
                }
                
                Button {
                    text: "Confirm";
                    primary: true;
                    enabled: root.temp-hotkey != "";
                    clicked => { 
                        root.confirm-hotkey(root.keyboard.id, root.temp-hotkey);
                    }
                }
            }
        }
    }
}